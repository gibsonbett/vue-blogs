{"ast":null,"code":"export default {\n  props: {\n    post: Object\n  },\n  mounted() {\n    // Fetch data from the mock API (replace with actual API call in a real project)\n    fetch('/mockData.json').then(response => response.json()).then(data => {\n      console.log('Fetched data:', data);\n      this.posts = data[0]; // Assuming the API returns an array with one set of posts\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n};","map":{"version":3,"names":["props","post","Object","mounted","fetch","then","response","json","data","console","log","posts","catch","error"],"sources":["/Users/gibson/Desktop/my-vue-blog/src/components/BlogPost.vue"],"sourcesContent":["<!-- src/components/BlogPost.vue -->\n<template>\n  <div class=\"blog-post\">\n    <h2>{{ post.title }}</h2>\n    <p>{{ post.body }}</p>\n    <div class=\"tags\">\n      <span v-for=\"tag in post.tags\" :key=\"tag\">{{ tag }}</span>\n    </div>\n    <div class=\"reactions\">\n      <span>{{ post.reactions }} Reactions</span>\n      \n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    post: Object,\n  },\n  mounted() {\n  // Fetch data from the mock API (replace with actual API call in a real project)\n  fetch('/mockData.json')\n    .then(response => response.json())\n    .then(data => {\n      console.log('Fetched data:', data);\n      this.posts = data[0]; // Assuming the API returns an array with one set of posts\n    })\n    .catch(error => {\n      console.error('Error fetching data:', error);\n    });\n}\n};\n</script>\n\n<style scoped>\n/* Add component-specific styles here */\n.blog-post {\n  margin-bottom: 20px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.blog-post h2 {\n  color: #333;\n}\n\n.blog-post p {\n  color: #666;\n}\n\n.tags {\n  margin-top: 10px;\n}\n\n.tags span {\n  display: inline-block;\n  margin-right: 5px;\n  padding: 5px;\n  background-color: #007bff;\n  color: #fff;\n  border-radius: 3px;\n}\n\n.reactions {\n  margin-top: 10px;\n}\n\n.reactions span {\n  color: #888;\n}\n</style>\n"],"mappings":"AAgBA,eAAe;EACbA,KAAK,EAAE;IACLC,IAAI,EAAEC;EACR,CAAC;EACDC,OAAOA,CAAA,EAAG;IACV;IACAC,KAAK,CAAC,gBAAgB,EACnBC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACG,IAAG,IAAK;MACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;MAClC,IAAI,CAACG,KAAI,GAAIH,IAAI,CAAC,CAAC,CAAC,EAAE;IACxB,CAAC,EACAI,KAAK,CAACC,KAAI,IAAK;MACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}